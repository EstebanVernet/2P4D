svg {
    overflow: visible;
}

.dom-node {
    position: absolute;
    /* outline: solid 1px red; */
    pointer-events: none;
    overflow: visible;
}

.dom-node *:not(svg) {
    pointer-events: all;
}

body:not(.tweak) .dom-node, body:not(.tweak) .dom-node * {
    pointer-events: none;
}

.operator {
    cursor: pointer;
}

/* Operator node */


.box-operator {
    position: absolute;
    padding: 8px;
    left: 50%;
    top: 0;
    transform: translate(-50%, calc(-100% - 16px));
    display: flex;
    gap: 8px;

    background-color: var(--box-color);
    border: solid 1px white;
}

.box-operator.hidden {
    display: none;
}

.box-operator img {
    width: 16px;
    height: 16px;
    cursor: pointer;
    border: solid 1px white;
}

.operator {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

.operator-icon {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none !important;
}

/* Debug display */

.debug-display {
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Input or outpu */

.input-output {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--box-color);
    pointer-events: none;
}

.input {
    border-right: solid 4px var(--guides-color);
}

.output {
    border-left: solid 4px var(--guides-color);
}

/* Functions */

.bezierfunc {
    outline: solid 1px var(--box-color);
}

#popup-funcs {
    position: fixed;
    display: flex;
    flex-direction: column;
    gap: 1px;
    background-color: var(--box-color);
    padding: 4px;
    padding-right: 16px;
    max-height: 150px;
    overflow-y: scroll;

    z-index: 3;
}

#popup-funcs:not(.show) {
    display: none;
}

.func-item {
    min-width: fit-content;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 16px;
    background-color: #E2E2E2;
    cursor: pointer;
    padding: 8px;
}

.func-item * {
    stroke: #2B2829;
    color: #2B2829;
    fill: transparent;
}

.node-func {
    border: solid 1px #4F7FFF;
    background-color: #545454;
    stroke: white;
    fill: none;
    width: fit-content;
    cursor: pointer;
}

/* Color node */

.node-color {
    display: flex;
    align-items: center;
    gap: 8px;
}

.node-color .h {
    width: 32px;
    height: 128px;
    background-image: linear-gradient(0deg,
    hsl(0, 100%, 50%),
    hsl(30, 100%, 50%),
    hsl(60, 100%, 50%),
    hsl(90, 100%, 50%),
    hsl(120, 100%, 50%),
    hsl(150, 100%, 50%),
    hsl(180, 100%, 50%),
    hsl(210, 100%, 50%),
    hsl(240, 100%, 50%),
    hsl(270, 100%, 50%),
    hsl(300, 100%, 50%),
    hsl(330, 100%, 50%),
    hsl(360, 100%, 50%)
  );
  background-size: 100% 100%;
  position: relative;
  cursor: pointer;
}

.node-color .sv {
    --hue: 0deg;
    width: 128px;
    height: 128px;
    background:
        linear-gradient(to bottom, #00000000 0%, #000000FF 100%),
        linear-gradient(to right, #FFFFFF 0%, hsl(var(--hue), 100%, 50%) 100%);
    background-size: 100% 100%;
    background-repeat: no-repeat;
    position: relative;
    cursor: pointer;
}

.node-color .labels {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
}

.node-color .labels div {
    width: 16px;
    height: 16px;
    font-size: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.node-color .color-sv-indicator {
    width: 8px;
    height: 8px;
    position: absolute;
    border-radius: 8px;
    border: solid 1px white;
    transform: translate(-50%, -50%);
    pointer-events: none;
    mix-blend-mode: difference;
}

.node-color .color-h-indicator {
    width: calc(32px + 8px);
    height: 8px;
    left: -4px;
    position: absolute;
    border: solid 1px white;
    transform-origin: center;
    transform: translateY(-50%);
    pointer-events: none;
    mix-blend-mode: difference;
}